"""Initial schema

Revision ID: bc81aa7eabb3
Revises: 
Create Date: 2025-01-12 19:09:07.571963

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'bc81aa7eabb3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('course',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('terms_count', sa.Integer(), server_default='0', nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('fullname', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('role', sa.Enum('STUDANT', 'INSTRUCTOR', 'ADMIN', name='userrole'), server_default='STUDANT', nullable=False),
    sa.Column('is_admin', sa.Boolean(), server_default='FALSE', nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('password_salt', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('course_term',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('term_number', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('WAITING', 'RUNNING', 'FINISHED', name='termstatus'), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('course_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ondelete='no action'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lesson',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('status', sa.Enum('WAITING', 'RUNNING', 'FINISHED', 'LATE', name='lessonstatus'), server_default='WAITING', nullable=False),
    sa.Column('effective_start_date', sa.Date(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('duration_min', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('instructor_id', sa.Uuid(), nullable=False),
    sa.Column('term_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['instructor_id'], ['user.id'], ondelete='no action'),
    sa.ForeignKeyConstraint(['term_id'], ['course_term.id'], ondelete='no action'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('term_user',
    sa.Column('term_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('role', sa.Enum('STUDANT', 'INSTRUCTOR', 'ADMIN', name='userrole'), nullable=False),
    sa.ForeignKeyConstraint(['term_id'], ['course_term.id'], ondelete='no action'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='no action'),
    sa.PrimaryKeyConstraint('term_id', 'user_id')
    )
    op.create_table('lesson_user',
    sa.Column('lesson_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('validated', sa.Boolean(), server_default='FALSE', nullable=False),
    sa.ForeignKeyConstraint(['lesson_id'], ['lesson.id'], ondelete='no action'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='no action'),
    sa.PrimaryKeyConstraint('lesson_id', 'user_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('lesson_user')
    op.drop_table('term_user')
    op.drop_table('lesson')
    op.drop_table('course_term')
    op.drop_table('user')
    op.drop_table('course')
    # ### end Alembic commands ###
